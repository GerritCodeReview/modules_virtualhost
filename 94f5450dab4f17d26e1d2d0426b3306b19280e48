{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4f55ed_0e8aeb43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-25T12:27:06Z",
      "side": 1,
      "message": "nit: _our_ is redundant here.",
      "range": {
        "startLine": 13,
        "startChar": 13,
        "endLine": 13,
        "endChar": 16
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdd1a9a4_6f4d5715",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-11-25T14:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce4f55ed_0e8aeb43",
      "range": {
        "startLine": 13,
        "startChar": 13,
        "endLine": 13,
        "endChar": 16
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a63c7fd6_aace555a",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-25T12:27:06Z",
      "side": 1,
      "message": "```suggestion\n  public void setHttpServletRequestProvider(Provider\u003cHttpServletRequest\u003e hsr) {\n```",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 35
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ee9f7b_3b87611f",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-11-25T14:19:05Z",
      "side": 1,
      "message": "This would also require refactoring in Gerrit core, which I don\u0027t think is worth it. WDYT?",
      "parentUuid": "a63c7fd6_aace555a",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 35
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "271a26b3_68452aff",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-01T16:50:14Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "94ee9f7b_3b87611f",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 35
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2159c1_528af838",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-25T12:27:06Z",
      "side": 1,
      "message": "Isn\u0027t the other way around? I would trust the requestProvider first and, because it is an optional injection, fallback to thread local.",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a783390d_3089b866",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-11-25T14:19:05Z",
      "side": 1,
      "message": "That \"optional injection\" doesn\u0027t really work, at least during my testing that setter was not called by Guice.\n\nAs I didn\u0027t see that injection happen, I went with the \"more performant\" option and used the thread local value. If that provider would be always called by Guice, I\u0027d definitely go with it.\n\nWDYT?",
      "parentUuid": "ab2159c1_528af838",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb6b97b_58d157a0",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-01T16:50:14Z",
      "side": 1,
      "message": "\u003e That \"optional injection\" doesn\u0027t really work, at least during my testing that setter was not called by Guice.\n\nWell, I used it extensively and it works for me.\n\n\u003e As I didn\u0027t see that injection happen, I went with the \"more performant\" option and used the thread local value. If that provider would be always called by Guice, I\u0027d definitely go with it.\n\nI believe it is worth to understand why the injection doesn\u0027t work first, as it should work.",
      "parentUuid": "a783390d_3089b866",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9530a296_5dab3a1a",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-03-01T18:48:44Z",
      "side": 1,
      "message": "\u003e Well, I used it extensively and it works for me.\n\nSame here, that\u0027s why I was surprised that it didn\u0027t work. But, as it\u0027s an _optional_ injection, the class needs to be bound (or injected) in the context that provides that optional dependency, this is not the case in this situation. See the below response for an explanation of why.\n\n\u003e I believe it is worth to understand why the injection doesn\u0027t work first, as it should work.\n\nThis was discussed on the change in Gerrit core I82891b, where the `setHttpServletRequest` was called manually in `Daemon` class, which meant that the `HttpCanonicalWebUrlProvider` class instance was created on the spot, to the `Provider\u003cHttpServletRequest\u003e` and then it was dismissed (and garbage collected). That\u0027s because in Gerrit core it\u0027s not a singleton.\n\n-- \n\nGoing back, to the initial question:\n\u003e Isn\u0027t the other way around? I would trust the requestProvider first and, because it is an optional injection, fallback to thread local.\n\nThat thread local should be set from the same HTTP request, so it doesn\u0027t matter anyway. I just felt that the thread-local would be more _reliable_ and we could \"skip\" one condition execution.\n\nAnyway, it shouldn\u0027t matter what\u0027s first. I can flit that the other way around ;)",
      "parentUuid": "9cb6b97b_58d157a0",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db28810_a7458f23",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-03-20T00:02:30Z",
      "side": 1,
      "message": "Yes, I prefer to trust Guice first, as the thread-local is basically a workaround.",
      "parentUuid": "9530a296_5dab3a1a",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46dfdb21_7a7750ca",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-03-20T12:19:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1db28810_a7458f23",
      "range": {
        "startLine": 59,
        "startChar": 4,
        "endLine": 62,
        "endChar": 102
      },
      "revId": "94f5450dab4f17d26e1d2d0426b3306b19280e48",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}