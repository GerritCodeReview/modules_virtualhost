{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b75576_9889c2fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-04-19T11:54:10Z",
      "side": 1,
      "message": "swapping",
      "range": {
        "startLine": 35,
        "startChar": 3,
        "endLine": 35,
        "endChar": 10
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8a47d19_b7e2f85f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-19T11:55:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1b75576_9889c2fa",
      "range": {
        "startLine": 35,
        "startChar": 3,
        "endLine": 35,
        "endChar": 10
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c21e097_d6109ab5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-19T12:02:32Z",
      "side": 1,
      "message": "This is also probably a side effect of `VirutalHostCanonicalWebUrlProvider` being market as `Singleton`. Which means, when it\u0027s created in the HTTP scope, we get the optional `Provider\u003cHttpServletRequest\u003e` injected, and cached in the instance. Then when we\u0027re called again outside of the HTTP scope, we still have that provider in our singleton instance, but when we try to call it BOOM! it throws `OutOfScopeException`.\n\nIMO, we can go with that fix, as the injection of `HttpCanonicalWebURlProvider` is already complicated and tracing down all corner cases might be problematic.",
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4344465f_e7ac1d1d",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-19T12:02:32Z",
      "side": 1,
      "message": "nit: from what I noticed, we usually have empty line between static and instance members",
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1272842b_04d9b184",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-19T12:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4344465f_e7ac1d1d",
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a4c884a_329c3641",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-19T12:02:32Z",
      "side": 1,
      "message": "s/current thread out/current thread is out/",
      "range": {
        "startLine": 72,
        "startChar": 82,
        "endLine": 72,
        "endChar": 101
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e05d19ec_2daaf457",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-19T12:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a4c884a_329c3641",
      "range": {
        "startLine": 72,
        "startChar": 82,
        "endLine": 72,
        "endChar": 101
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "073adbf2_303d0c72",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2024-04-19T12:02:32Z",
      "side": 1,
      "message": "nit: just for readability purposes, IMO would be good to extract this into a private method.",
      "range": {
        "startLine": 67,
        "startChar": 24,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f53f7ce_a71896f4",
        "filename": "src/main/java/com/gerritforge/gerrit/modules/virtualhost/VirtualHostHttpCanonicalWebUrlProvider.java",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-04-19T12:07:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "073adbf2_303d0c72",
      "range": {
        "startLine": 67,
        "startChar": 24,
        "endLine": 75,
        "endChar": 25
      },
      "revId": "314b272e19c9668d194d153b3dfa70680247956d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}